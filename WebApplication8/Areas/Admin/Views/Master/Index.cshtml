@using WebApplication8.Data
@{
    ViewBag.Title = "Index";
}
<div style="border:1px solid grey;">
    <fieldset>
        <legend style="padding-left:20px;">Quản lý Role</legend>
        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", id = "form-role" }))
        {
            @*@Html.DropDownList("OldRoleName")
                <input type="submit" value="Remove" onclick="form.action = '/Admin/Master/RemoveRole'" />*@
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label col-md-2">role:</label>
                    <div class="col-md-10">
                        @Html.TextBox("NewRoleName", null, new { @class = "form-control", @required = "required" })
                    </div>


                </div>
                <div class="col-md-offset-2">
                    <input class="btn btn-primary" type="submit" value="Add" onclick="form.action = '@Url.RouteUrl(new {controller="/",area="" })Admin/Master/AddRole'" />
                </div>
            </div>

        }

        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", id = "form-role-delete" }))
        {
            <div class="col-md-8">
                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>Roles</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var r in ViewBag.Roles)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" name="UserRoles" value="@r.Name" />
                                    @r.Name

                                </td>
                                <td>

                                    <button type="button" class="btn btn-sm btn-danger" onclick="form.action = '@Url.RouteUrl(new {controller="/",area="" })Admin/Master/RemoveRole?OldRoleName=@r.Name'" data-toggle="modal" data-target="#confirmDelete" data-title="Delete item @r.Name" data-message="Are you sure you want to delete selected item @r.Name?"><i class="fa fa-trash"></i> Delete role</button>
                                </td>
                            </tr>


                        }
                    </tbody>
                </table>
                <button>Delete Selected</button>


            </div>

        }



    </fieldset>
    <hr />
</div>
<!--end rolemanagement-->

<div style="border:1px solid grey; margin-top:20px;">
    <fieldset>
        <legend style="padding-left:20px">Quản lý User</legend>

        @using (Html.BeginForm("adduser", "master", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "form-user" }))
        {
            <div class="form-group">
                <label for="Email" class="control-label col-md-2">Email</label>
                <div class="col-md-6">
                    @Html.TextBox("Email", null, new { @class = "form-control" })
                </div>

            </div>
            <div class="form-group">
                <label for="Password" class="control-label col-md-2">Password</label>
                <div class="col-md-6">
                    @Html.Password("Password", null, new { @class = "form-control" })
                </div>

            </div>
            <div class="form-group">
                <label for="Fullname" class="control-label col-md-2">Fullname</label>
                <div class="col-md-6">
                    @Html.TextBox("Fullname", null, new { @class = "form-control" })
                </div>

            </div>




            <div class="col-md-offset-2">
                <div>Roles</div>
                @foreach (var r in ViewBag.Roles)
                {
                    <label>
                        <input type="checkbox" name="UserRoles" value="@r.Name" />
                        @r.Name
                    </label>
                }
                <input class="btn btn-primary" type="submit" value="Add" onclick="form.action = '/Admin/Master/AddUser'" />
            </div>



        }

        <hr />
        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "form-user" }))
        {
            <table class="table table-bordered" id="domainTable">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Roles</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (ApplicationUser u in ViewBag.Users)
                    {

                        //var roleIds = u.Roles.Select(ur => ur.RoleId).ToList();
                        //var t = u.Roles;
                        var roleIds = ((List<ApplicationRole>)ViewBag.Roles).Select(ur => ur.Id).ToList();
                        var t = (List<ApplicationRole>)ViewBag.Roles;
                        <tr>
                            <td>@u.UserName</td>
                            <td>
                                @foreach (var r in ViewBag.Roles)
                                {
                                    var check = roleIds.Contains(r.Id) ? "checked" : "";
                                    <label>
                                        <input @check type="checkbox" name="Roles"
                                               value="@r.Name" data-userid="@u.UserName" />
                                        @r.Name
                                    </label>
                                }
                            </td>
                            <td>
                                @*<a class="btn btn-danger" href="/Admin/Master/RemoveUser?UserName=@u.UserName">Delete</a>*@
                                <button type="button" class="btn btn-sm btn-danger" onclick="form.action = '@Url.RouteUrl(new {controller="/",area="" })Admin/Master/RemoveUser?UserName=@u.UserName'" data-toggle="modal" data-target="#confirmDelete" data-title="Delete item @u.UserName" data-message="Are you sure you want to delete selected @u.UserName ?"><i class="fa fa-trash"></i> Delete User</button>

                                <a class="btn btn-danger" href="~/Admin/Master/ResetPassword/@u.Id">Reset Password</a>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        }
    </fieldset>
</div>

@{@await Html.PartialAsync("_ModelPopup"); }


@section scripts{
    <script src="~/Scripts/LoadDataTable.js"></script>
    <script src="~/Scripts/ModelPopup.js"></script>
    <script type="text/javascript">
        $(function () {
            $(":checkbox[name=Roles]").click(function () {
                var roleName = $(this).val();
                var status = $(this).prop("checked");
                var userName = $(this).attr("data-userid");
                $.ajax({
                    url: "/Admin/Master/UpdateRole",
                    data: { Name: roleName, Status: status, UserName: userName },
                    success: function (response) {
                        //  alert(response);
                        alert(response);
                        console.log(response);
                    }
                });
            });
        });
    </script>




    <script type="text/javascript">
        $(document).ready(function () {
            $('#form-user').bootstrapValidator({
                //live: 'disabled',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },

                fields: {

                    Email: {

                        validators: {
                            notEmpty: {
                                message: 'The Email is required and cannot be empty'
                            },

                            emailAddress: {
                                message: 'The Email is is not valid'
                            },
                            remote: {
                                type: 'GET',
                                url: '/Validating/IsUserExists',
                                data: { type: 'Email' },
                                //data: function (validator) {
                                //    return {
                                //        'NewRoleName': validator.getFieldElements('NewRoleName').val()
                                //    };
                                //},
                                message: 'The Email is already in use'
                            },
                        }
                    },
                    Password: {
                        validators: {

                            notEmpty: {
                                message: 'The Password is required and cannot be empty'
                            },
                            stringLength: {
                                min: 6,
                                max: 30,
                                message: 'The Password must be more than 6 and less than 30 characters long'
                            }
                        }

                    },

                    Fullname: {
                        validators: {

                            notEmpty: {
                                message: 'The fullname is required and cannot be empty'
                            },

                        }

                    },




                }
            });
        });



    </script>








    <script type="text/javascript">
        $(document).ready(function () {



            $('#form-role').bootstrapValidator({
                //live: 'disabled',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },

                fields: {

                    NewRoleName: {

                        validators: {
                            notEmpty: {
                                message: 'The Role Name is required and cannot be empty'
                            },

                            remote: {
                                type: 'GET',
                                url: '/Validating/IsRoleExists',
                                data: { type: 'NewRoleName' },
                                //data: function (validator) {
                                //    return {
                                //        'NewRoleName': validator.getFieldElements('NewRoleName').val()
                                //    };
                                //},
                                message: 'The Role Name is already in use'
                            },
                        }
                    },


                }





            });


        });



    </script>


















}